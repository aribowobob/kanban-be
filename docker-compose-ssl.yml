version: "3.8"

services:
  kanban-api:
    image: aribowobob/kanban-be:latest
    container_name: kanban-backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8080:8080" # Only bind to localhost, nginx will proxy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      ENVIRONMENT: production
      FRONTEND_URLS: ${FRONTEND_URLS:-https://dev.opense7en.com}
      PORT: 8080
      RUST_LOG: info
      # Cloudinary configuration (if using)
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME:-}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY:-}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET:-}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - kanban-network

  nginx:
    image: nginx:alpine
    container_name: kanban-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - kanban-api
    networks:
      - kanban-network

  certbot:
    image: certbot/certbot
    container_name: kanban-certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@opense7en.com --agree-tos --no-eff-email -d dev.opense7en.com
    profiles:
      - cert # Only run when explicitly called

  # Optional: PostgreSQL for local development
  postgres:
    image: postgres:15-alpine
    container_name: kanban-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kanban}
      POSTGRES_USER: ${POSTGRES_USER:-kanban}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kanban-network
    profiles:
      - local # Only start with: docker-compose --profile local up

volumes:
  postgres_data:

networks:
  kanban-network:
    driver: bridge
